.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom, 
        rgba($color-primary-light, 0.8), 
        rgba($color-primary-dark, 0.8)), 
        url(../img/hero.jpg);
    background-size: cover;
    background-position: center;
    position: relative;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    /*  Definition of clip-path: ; -> Changes four corners of the element to change. Depends on what shape function you use(polygon() is one of examples.).
    Every corner has X, Y directions of cutting or filling. X goes from left side to right 100% of the width of the element, Y goes from top side to 
    bottom of the height of the element. Best is online tool https://bennettfeely.com/clippy/ for this clip-path task.
    1) X 0% far away from left of the width of the element, Y 0%(you can use any measeurement units) from top of heaight of the elemnt
    2) X 100% far away from left of the width of the element, Y 0% from top of the height of the element
    3) X 100% far from left of width of the element, Y 200px(or what ever unit measurement) far from top of the height of the element 
    3) X 100% far away from left of the width of the element, Y 75vh(viewport height) far from the top of the height of the element
    4) X 0 far away from left of the width of the elemnt, Y 100% far away from top of the Height of the element */
    @include respond(big-desktop) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 77vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 77vh, 0 100%);
    }
    @include respond(tablet) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 87vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 87vh, 0 100%);
    }
    
    @include respond(tablet-portrait) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    }

    @include respond(phone) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    }

    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo {
        height: 3.5rem;
    }

    &__text-box {
        position: absolute;
        top: 50%;
        /* The top: 40%; property is in relation to the parent element */
        left: 50%;
        /* The left: 50%; property is in relation to the parent element */
        transform: translate(-50%, -50%);
        /* and this property change it to relationship to itself. Then this makes the element position exactly at the center */
        text-align: center;
        z-index: 3;
    }

}

/* The text-box we want in center. Therefore top: 50%; is fifty precent from left and left:50%; is fifty precent from the left. transform: translate(-50%, 50%); helps us to the element is no longer in relation with the parent element but with itself   */
